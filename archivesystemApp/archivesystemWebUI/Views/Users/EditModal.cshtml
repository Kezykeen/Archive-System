@model archivesystemWebUI.Models.UpdateUserVm
<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Edit User</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div class="modal-body">
                @using (Ajax.BeginForm("Edit", "Employees",  new AjaxOptions
                {
                    OnSuccess = "OnEditSuccess",
                    OnFailure = "OnEditFailure", 
                    LoadingElementId = "updating",
                    LoadingElementDuration = 3000

               
                }, new {id="update_user"}))
                {
                    @Html.ValidationSummary(true, "", new { @class = "" })
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(e => e.Id)
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(e => e.FirstName)

                            @Html.TextBoxFor(e => e.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.FirstName)

                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(e => e.LastName)

                            @Html.TextBoxFor(e => e.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.LastName)

                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(e => e.Email)

                            @Html.TextBoxFor(e => e.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.Email)

                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(e => e.Gender)

                            @Html.EnumDropDownListFor(e => e.Gender, "Select Gender", new { @class = "select" })
                            @Html.ValidationMessageFor(e => e.Gender)
                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(e => e.TagId)

                            @Html.TextBoxFor(e => e.TagId, new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.TagId)

                        </div>
                    </div>


                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(e => e.DepartmentId)


                            @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.Departments, "Id", "Name"), "Select Department", new { @class = "select" })
                            @Html.ValidationMessageFor(e => e.DepartmentId)

                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(e => e.Phone)

                            @Html.TextBoxFor(e => e.Phone, new { @class = "form-control" })
                            @Html.ValidationMessageFor(e => e.Phone)

                        </div>
                    </div>



                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(e => e.Designation)

                            @Html.EnumDropDownListFor(e => e.Designation, "Select Designation", new { @class = "select" })
                            @Html.ValidationMessageFor(e => e.Designation)
                        </div>
                    </div>
                </div>

                    <div class="submit-section">
                        <button class="btn btn-primary submit-btn">Submit</button>
                        <div id="updating" class="fa-2x" style="color: gray; display: none">
                            <i class="fa fa-cog fa-spin  fa-fw" aria-hidden="true"></i>
                            <span class="sr-only">Saving. Hang tight!</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script>
    function OnEditSuccess(response) {

        if (response.status === 'success') {

               
            $('#edit_user').modal('hide');

            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: response.msg + ' Successfully Updated',
                showConfirmButton: false,
                timer: 1500
            });

            $("#users").DataTable().ajax.reload();
        } else if (response.status == null) {
           
            $("#edit_user").html(response);
            $("#edit_user").modal("show");
            $.validator.unobtrusive.parse("#enroll");

            if ($('#edit_user .select').length > 0) {
                $('#edit_user .select').select2({
                    minimumResultsForSearch: -1,
                    width: '100%'
                });

            }

            if ($('#edit_user .datetimepicker').length > 0) {
                $('#edit_user .datetimepicker').datetimepicker({
                    format: 'DD/MM/YYYY',
                    icons: {
                        up: "fa fa-angle-up",
                        down: "fa fa-angle-down",
                        next: 'fa fa-angle-right',
                        previous: 'fa fa-angle-left'
                    }
                });
            }

        }
    }

    function OnEditFailure(response) {
        console.log(response);
    }
</script>